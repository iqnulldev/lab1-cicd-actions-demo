 on:
   push:
     branches: [ main ] # Запускати на push у гілку main

 jobs:
   build_and_test: # ЦЕ ТВОЯ ЧАСТИНА З ПЕРШОЇ ЛАБОРАТОРНОЇ (CI)
     name: Build and Test Project
     runs-on: ubuntu-latest
     steps:
     - name: Checkout repository
       uses: actions/checkout@v4

     # --- ПОЧАТОК ТВОЇХ КРОКІВ З ПЕРШОЇ ЛАБИ (ПРИКЛАД ДЛЯ PYTHON) ---
     - name: Set up Python
       uses: actions/setup-python@v5
       with:
         python-version: '3.10' # Або твоя версія Python

     - name: Install dependencies
       run: |
        python -m pip install --upgrade pip
        pip install pytest 
        # Якщо у тебе є requirements.txt, і ти хочеш встановити звідти теж:
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

     - name: Run tests
       run: pytest # Або твоя команда для запуску тестів
     # --- КІНЕЦЬ ТВОЇХ КРОКІВ З ПЕРШОЇ ЛАБИ ---

   deploy_to_wsl: # ЦЕ НОВИЙ JOB ДЛЯ ДРУГОЇ ЛАБОРАТОРНОЇ (CD)
     name: Deploy to WSL2 via ngrok
     needs: build_and_test # ЗАПУСКАТИ ТІЛЬКИ ПІСЛЯ УСПІХУ build_and_test
     runs-on: ubuntu-latest
     # Розгортати тільки при push у гілку main, а не на pull request
     if: github.ref == 'refs/heads/main' && github.event_name == 'push'

     steps:
     # Крок Checkout не завжди обов'язковий для deploy, якщо deploy.sh все робить сам.
     # Але якщо deploy.sh очікує якісь файли з репозиторію, то залиш.
     # - name: Checkout repository 
     #   uses: actions/checkout@v4

     - name: Setup SSH for WSL2
       env:
         SSH_KEY_CONTENT: ${{ secrets.SSH_PRIVATE_KEY }}
         NGROK_HOST_ADDR: ${{ secrets.NGROK_HOST }}
         NGROK_TUNNEL_PORT: ${{ secrets.NGROK_PORT }}
         WSL_TARGET_USER: ${{ secrets.WSL_USERNAME }}
       run: |
         echo "Setting up SSH environment on GitHub Runner..."
         mkdir -p ~/.ssh/
         echo "${SSH_KEY_CONTENT}" > ~/.ssh/wsl_deploy_key
         chmod 600 ~/.ssh/wsl_deploy_key
         
         echo "Creating SSH config for ngrok tunnel..."
         cat <<EOF > ~/.ssh/config
         Host wsl_ngrok_tunnel # Довільне ім'я хоста для SSH-конфігурації
           HostName ${NGROK_HOST_ADDR}
           User ${WSL_TARGET_USER}
           Port ${NGROK_TUNNEL_PORT}
           IdentityFile ~/.ssh/wsl_deploy_key
           StrictHostKeyChecking no
           UserKnownHostsFile=/dev/null
           LogLevel ERROR # Щоб зменшити кількість логів від SSH
         EOF
         chmod 600 ~/.ssh/config
         
         echo "SSH Config content on Runner:"
         cat ~/.ssh/config

     - name: Execute deployment script on WSL2
       run: |
         echo "Attempting to connect to WSL2 via ngrok tunnel (wsl_ngrok_tunnel) and run deploy.sh..."
         ssh wsl_ngrok_tunnel 'bash ~/deploy.sh' # Використовуємо ім'я хоста з SSH config
         echo "Deployment script execution command sent to WSL2."


